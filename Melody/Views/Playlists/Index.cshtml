@model IEnumerable<Melody.Models.Playlist>

@{
    ViewData["Title"] = "Index";
}
<style>
    .container .div-right .Playlists {
        display: flex;
        flex-wrap: wrap;
        background-color: #333;
        border-radius: 25px;
        height: auto;
        width: auto; /* Full width */
        gap: 7px;
    }

    .Playlist-list {
        width: 120px;
        border-radius: 25px;
        height: auto;
        background-color: black;
        margin: 5px;
    }

    .Playlist-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 10px;
        position: relative; /* Ensures hover title is positioned correctly */
    }

    .Playlist-image {
        width: 100px;
        height: 100px;
        border-radius: 25px;
        object-fit: cover; /* Ensure the image fits the circle properly */
        border: 2px solid #5fd068;
    }

    /* Hidden title that appears on hover */
    .Playlist-title {
        position: absolute;
        bottom: -20px; /* Position below the Playlist */
        text-align: center;
        font-size: 14px;
        color: #fff;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none; /* Prevent interaction with the title */
    }

    /* Show title on hover */
    .Playlist-container:hover .Playlist-title {
        opacity: 1;
    }

    .div-right h3 {
        width: 100px;
        margin: 5px;
        margin-left: 15px;
        padding: 0;
    }
</style>

<div class="container">
    @await Html.PartialAsync("_leftDiv")
    <div class="div-right">
        @await Html.PartialAsync("_rightDiv")
        <h3>Playlist</h3>
        <div class="Playlists">
            @foreach (var playlist in Model) // Model will only contain playlists for the logged-in user
            {
                <div class="Playlist-list">
                    <div class="Playlist-container">
                        <a href="@Url.Action("Playlist", "Playlists", new { id = playlist.PlaylistId })">
                            @{
                                var imagePath = string.IsNullOrEmpty(playlist.CoverImagePath)
                                ? Url.Content("default-image.png")
                                : Url.Content(playlist.CoverImagePath);
                            }
                            <img src="~/images/@imagePath" class="Playlist-image" alt="@playlist.Name" />
                        </a>
                        <div class="Playlist-title">@playlist.Name</div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

